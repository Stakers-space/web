    <aside><mark>Guide under construction, not tested yet. Do not use it for production.</mark></aside>
    <ul>
      <li>
    <h4>Create a user</h4>
      <label>Service/User name</label>: <input type="text" value="{{servicePrefix}}nimbusbeacon" class="interactive-element consensus_sn" data-class="consensus_sn" data-client="nimbus">
      <pre><code>sudo useradd --system --no-create-home --shell /bin/false <mark class="consensus_sn" data-client="nimbus">{{servicePrefix}}nimbusbeacon</mark></code></pre>
    </li>
    <li>
    <h4>Create a folder for Nimbus beacon data{{#if chain}} on {{chainName}} chain{{/if}}</h4>
    <label>Service data directory</label>: <input type="text" value="/var/lib{{slashChain}}/nimbusbeacon" class="interactive-element consensus-dp" data-class="consensus-dp" data-client="nimbus">
    <pre><code>sudo mkdir -p <mark class="consensus-dp">/var/lib{{slashChain}}/nimbus/beacon</mark></code></pre>
  </li>
  <li>
    <h4>Set access permission and ownership for the Nimbus Beacon data folder</h4>
    <pre><code>sudo chown -R <mark class="consensus_sn" data-client="nimbus">{{servicePrefix}}nimbusbeacon</mark>:<mark class="consensus_sn" data-client="nimbus">{{servicePrefix}}nimbusbeacon</mark> <mark class="consensus-dp">/var/lib{{slashChain}}/nimbus/beacon</mark></code></pre>
  </li>
    </ul>
<h3 class="mt-60">Configurate & Run Nimbus Beacon service</h3>

<ul>
 {{#if PortSelection}}
  <li class="mt-15">{{> clients/config/consensusclient-portselection }}</li>
  {{/if}}
  <li>
    <h4>Creating a checkpoint</h4>
  {{#unless chain}}
          <div class="tabselector">
						<nav class="egrid egrid-2">
							<button class="tab selected" data-tabpanel="1">Ethereum</button>
							<button class="tab" data-tabpanel="2">Gnosis</button>
						</nav>
						<div class="tabpanel selected">
<pre><code>sudo /usr/local/bin/nimbus/nimbus_beacon_node trustedNodeSync \
  --network:mainnet  \
  --data-dir=<mark class="consensus-dp" data-client="nimbus" data-beacondir="true">/var/lib{{slashChain}}/nimbus/beacon</mark> \
  --<a href="https://nimbus.guide/trusted-node-sync.html" target="_blank">trusted-node-url</a>=https://beaconstate.info</code></pre>
						</div>
						<div class="tabpanel">
<pre><code>sudo /usr/local/bin/nimbus/nimbus_beacon_node_gnosis trustedNodeSync \
      --network:gnosis \
      --data-dir=<mark class="consensus-dp" data-client="lighthouse" data-beacondir="true">/var/lib{{slashChain}}/nimbus/beacon</mark> \
      --<a href="https://nimbus.guide/trusted-node-sync.html" target="_blank">trusted-node-url</a>=https://checkpoint.gnosischain.com/</code></pre>
						</div>
					</div>
          <i>*Note: Update <code>jwt-secret-file</code>, if you use different</i>
          {{/unless}}
{{#ifEqual chain "ethereum"}}
<pre><code>sudo /usr/local/bin/nimbus/nimbus_beacon_node trustedNodeSync \
  --network:mainnet  \
  --data-dir=<mark class="consensus-dp" data-client="nimbus" data-beacondir="true">/var/lib{{slashChain}}/nimbus/beacon</mark> \
  --<a href="https://nimbus.guide/trusted-node-sync.html" target="_blank">trusted-node-url</a>=https://beaconstate.info</code></pre>
{{/ifEqual}}
{{#ifEqual chain "gnosis"}}
<pre><code>sudo /usr/local/bin/nimbus/nimbus_beacon_node_gnosis trustedNodeSync \
      --network:gnosis \
      --data-dir=<mark class="consensus-dp" data-client="lighthouse" data-beacondir="true">/var/lib{{slashChain}}/nimbus/beacon</mark> \
      --<a href="https://nimbus.guide/trusted-node-sync.html" target="_blank">trusted-node-url</a>=https://checkpoint.gnosischain.com/</code></pre>
{{/ifEqual}}
  </li>
  <li>
    <h4>Create configuration file for Tekubeacon service</h4>
    <ol>
      <li>
        <p>Open Nimbus Beacon configuration file</p>
        <pre><code>sudo nano /etc/systemd/system/<mark class="consensus_sn" data-client="nimbus">{{servicePrefix}}nimbusbeacon</mark>.service</code></pre>
      </li>
      <li><p>Copy configuration</p>
          {{#unless chain}}
          <div class="tabselector">
						<nav class="egrid egrid-2">
							<button class="tab selected" data-tabpanel="1">Ethereum</button>
							<button class="tab" data-tabpanel="2">Gnosis</button>
						</nav>
						<div class="tabpanel selected">
{{> clients/config/eth-nimbusbeacon }}
						</div>
						<div class="tabpanel">
{{> clients/config/gno-nimbusbeacon }}
						</div>
					</div>
          <i>*Note: Update <code>jwt-secret-file</code>, if you use different</i>
          {{/unless}}
{{#ifEqual chain "ethereum"}}
{{> clients/config/eth-nimbusbeacon }}
{{/ifEqual}}
{{#ifEqual chain "gnosis"}}
{{> clients/config/gno-nimbusbeacon }}
{{/ifEqual}}
      </li>
      <li>
        Press <code>CTRL</code> + <code>X</code> then <code>Y</code> then <code>ENTER</code> to save and exit the config
        file.
      </li>
    </ol>
  </li>
  <li>
    <h4>Load changes</h4>
    <pre><code>sudo systemctl daemon-reload</code></pre>
  </li>
  <li>
    <h4>Start the Beacon chain service</h4>
    <pre><code>sudo systemctl start <mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark></code></pre></code></pre>
  </li>
  <li>
    <h4>Check the service</h4>
    <pre><code>systemctl status <mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark>
journalctl -fu <mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark></code></pre>
  </li>
  <li>
    <h4>Start the service automatically on system startup</h4>
    <div class="tabselector">
      <nav class="egrid egrid-2">
        <button class="tab selected" data-tabpanel="1">Standard configuration</button>
        <button class="tab" data-tabpanel="2">StakersSpace configuration</button>
      </nav>
      <div class="tabpanel selected">
                <div class="tabselector">
                    <nav class="egrid egrid-2">
                    <button class="tab selected" data-tabpanel="1">Standard option</button>
                    <button class="tab" data-tabpanel="2">Delayed start util</button>
                    </nav>
                    <div class="tabpanel selected">
                    <pre><code>sudo systemctl enable <mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark></code></pre>
                    </div>
                    <div class="tabpanel">
                        <aside>NOTE: This option requires installed <a href="https://github.com/Stakers-space/staking-scripts/tree/main/utils/start_with_delay" target="_blank" rel="nofollow noopener">Start with Delay util</a>.</aside>
                        <ul>
                            <li>Open Delayed Start shell
                                <pre><code>sudo nano /usr/local/bin/delayed-start.sh</code></pre>
                                <p>Configurate service start inside it</p>
                                <pre><code>systemctl start <mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark>.service</code></pre>
                            </li>
                            <li>Be sure, <code>delayed-start.service</code> service controlling <code>delayed-start.sh</code> is enabled for auto start with system startup
                                <pre><code>sudo systemctl enable delayed-start.service</code></pre>
                            </li>
                        </ul>
                    </div>
                </div>
                </div>
                <div class="tabpanel">
                <aside>NOTE: This option requires following installed utils:
                    <ul>
                    <li><a href="https://github.com/Stakers-space/staking-scripts/tree/main/utils/start_with_delay" target="_blank">Start with Delay util with delayed-start.service</a>.</li>
                    <li><a href="https://github.com/Stakers-space/staking-scripts/tree/main/manager" target="_blank">Staking Manager</a> util.</li>
                    </ul>
                    <p>A guide to install each util is attached on the Github.</p>
                </aside>
                <ol>
                    <li><h4>Configurate Staking Manager util</h4>
                    <ul>
                        <li>Open the configuration file
                        <pre><code>sudo nano /usr/local/etc/staking/config/clients.conf</code></pre>
                        <p>If the file is empty, generate it with command <code>sudo /usr/local/bin/staking.sh init</code></p>
                        </li>
                        <li>Set link to proper services. It should be as follow:
                        <pre><code>beaconServices="<mark class="consensus_sn">{{servicePrefix}}nimbusbeacon</mark>.service"</code></pre>
                        </li>
                    </ul>
                    </li>
                    <li>
                    <h4>Activate service to start automatically on OS startup</h4>
                    <ul>
                        <li>Open Start with delay util
                            <pre><code>sudo nano /usr/local/bin/delayed-start.sh</code></pre>
                        </li>
                        <li>Place or uncomment a command to start the Beacon client(s)
                            <pre><code>/usr/local/bin/staking.sh start beacon</code></pre>
                        </li>
                        <li>Verify, that a service `delayed-start.service` exists and is automatically launched on system start.
                        <pre><code>sudo systemctl enable delayed-start.service</code></pre>
                        </li>
                    </ul>
                    </li>      
                </ol>
              </div>
      </div>
  </li>
</ul>