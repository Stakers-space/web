{{> header}}
<section class="grid grid-cols-1 md:grid-cols-[67fr_33fr] gap-8 p-8">
	<div class="mx-auto md:px-6 md:py-16">
		<ul class="broadcrumbs" vocab="https://schema.org/" typeof="BreadcrumbList">
				<li property="itemListElement" typeof="ListItem">
					<a property="item" typeof="Thing" href="/"><span property="name">Stakers.space</span></a>
					<meta property="position" content="1">
				</li>
				<li property="itemListElement" typeof="ListItem">
					<a property="item" typeof="Thing" href="/{{chainUrl}}"><span property="name">{{chainName}} staking</span></a>
					<meta property="position" content="2">
				</li>
				<li property="itemListElement" typeof="ListItem">
					<a property="item" typeof="Thing" href="/{{chainUrl}}/full-guide"><span property="name" class="intro-label">Guide</span></a>
					<meta property="position" content="3">
				</li>
				<li property="itemListElement" typeof="ListItem">
					<a property="item" typeof="Thing" href="/{{chainUrl}}/full-guide/stakewise"><span property="name" class="intro-label">StakeWise</span></a>
					<meta property="position" content="3">
				</li>
			</ul>
		<h1 class="text-4xl md:text-5xl font-extrabold text-gray-900 leading-tight mb-4">
			<span class="block mt-1 text-green-600">Interactive StakeWise {{chainName}} staking</span> guide for Ubuntu OS
		</h1>

		<p class="text-lg md:text-xl text-gray-700 leading-relaxed max-w-3xl">
			Interactive complete guide to stake one as well as thousands of StakeWise validators in a single staking node. Simply made, well explained, allowing running multiple chains on a single node. Focused on {{chain}}.
		</p>
	</div>
	<div class="flex items-center justify-center md:pl-10 text-sm text-gray-600">
		<div class="md:max-w-xs bg-gray-50 p-6 rounded-xl shadow-md">
			<h3 class="font-semibold mb-1">Disclaimer</h3>
			<p>
				This guide is for informational purposes only. The author nor website owner does not guarantee accuracy of the information in this guide and is not responsible for any damages or losses incurred by following the guide. <a href="/disclaimer" target="_blank">See more.</a>
			</p>
		</div>
	</div>
</section>

<div class="ifr-grid grid-cols-1 xl:grid-cols-[minmax(220px,1fr)_minmax(0,6fr)_minmax(240px,1fr)] gap-6 mt-12">
	<aside class="ifr-nav lg:mt-14">
		<nav class="border-l-4 border-gray-500 pl-4">
			<p class="font-semibold mb-2">Navigation</p>
			<ol class="list-decimal space-y-2 pl-6">
						<li><a href="#prerequisites">Prerequisites</a></li>
						<li><a href="#install">Install</a></li>
						<li><a href="#operator">Configurate StakeWise operator</a></li>
						<li><a href="#validator">Configurate Validator client(s)</a></li>
						<li><a href="#update">Update</a></li>
						<li><a href="#exit">Exit validator(s)</a></li>
					</ol>
		</nav>
	</aside>

	<div class="ifr-header">
		<section id="prerequisites">
			<div class="max-w-6xl mx-auto px-4 py-14 pt-0">
				<span class="inline-flex items-center rounded-full bg-emerald-600 text-white px-3 py-1 text-xs font-semibold tracking-wide shadow">
					Prerequisites
				</span>
				<h2 class="mt-4 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
					Prerequisites for {{chainName}} staking
				</h2>
				<p class="mt-2 text-gray-600 mb-8">
					Before you start, make sure you have these three things ready.
				</p>

				<div class="rounded-2xl border backdrop-blur shadow-2xl ring-1 ring-black/5 bg-neutral-900/70 border-white/10">
					<ol class="divide-y divide-gray-100/70">
						<li class="p-6 md:p-8 flex gap-5">
							<div class="flex-shrink-0">
								<span class="flex h-10 w-10 items-center justify-center rounded-2xl bg-emerald-600 text-white font-bold shadow">
								1
								</span>
							</div>
							<div class="min-w-0">
								<h3 class="text-lg font-semibold text-gray-900 dark:text-white">
									Installed and synced Execution and Consensus client
								</h3>
								<p class="mt-1 text-gray-300">
									Prepare Execution and Consensus client for {{chainName}} staking. Check out the recommended options and instructions.
								</p>
								<a href="/{{chainUrl}}/full-guide"
									class="mt-4 inline-flex items-center gap-2 rounded-full bg-black text-white px-5 py-2.5 text-sm font-medium hover:bg-gray-800 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black">
									Install Execution and Consensus Client
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
									</svg>
								</a>
							</div>
						</li>
				</ol>
			</div>

			<div class="mt-8 flex flex-wrap items-center justify-between gap-3">
				<p class="text-sm text-gray-600 dark:text-gray-400">
					Do you meet all the requirements? Continue with configuration and key generation.
				</p>
				<a href="/{{chainUrl}}/setup"
					class="inline-flex items-center gap-2 rounded-full bg-emerald-600 text-white px-5 py-2.5 text-sm font-semibold hover:bg-emerald-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-emerald-600">
					Start setup
					<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
					<path fill-rule="evenodd" d="M12.293 4.293a1 1 0 011.414 0L18 8.586a2 2 0 010 2.828l-4.293 4.293a1 1 0 01-1.414-1.414L14.586 12H4a1 1 0 110-2h10.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
					</svg>
				</a>
				</div>
			</div>
		</section>
		<aside class="mt-12">
			{{> guides/serverSelection }}
		</aside>
	</div>

	<main class="ifr-body prose prose-lg" id="setup">
		{{!--<section class="chapter" id="hardware">
				<div class="content" style="width:100%">
					<h2>Installing StakeVise Operator / Validator</h2>
					<h2>Vaults parameters</h2>
					<ul class="list-disc my-4">
						<li><h3>Vault type</h3>
							<ul class="list-disc my-4">
								<li><strong>Public Vaults</strong> can receive staking deposits from any wallet.</li>
								<li><strong>Private Vaults can only receive deposits from whitelisted wallets by the Vault Admin</strong></li>
							</ul>
							<p>Vault type is defined by the Vault creator during Vault setup and <strong>cannot be changed later</strong>.</p>
						</li>
						<li>
							<h3>Vault capacity</h3>
							<ul class="list-disc my-4">
								<li>Can range from 32 ETH / 1 GNO to infinity. </li>
								<li>Setting/choosing an appropriate Vault capacity helps to ensure that the staking infrastructure of the Vault Operator does not carry more validators than it was designed to handle. </li>
								<li>Vault capacity is defined by the Vault creator during Vault setup and <strong>cannot be changed later</strong>.</li>
							</ul>
						</li>
						<li>
							<h3>Vault fee</h3>
							<ul class="list-disc my-4">
								<li>Sets a percentage fee that will be withheld from the rewards earned by Vault's validators as compensation for staking services. Can range from 0 to 100%.</li>
								<li>Vault fee is defined by the Vault creator during Vault setup and <strong>cannot be changed later</strong>.</li>
							</ul>
						</li>
						<li>
							<h3>Vault token</h3>
							<ul class="list-disc my-4">
								<li>Defines whether a Vault has an ERC-20 token to represent ETH staked by users in the Vault, or the Vault is tokenless.</li>
								<li>Vaults that opt into having a Vault Token can set its name and symbol (e.g. mntETH), which will be visible in most portfolio tracking applications.</li>
								<li>Setting/choosing a Vault with Vault Tokens allows users to transfer their stake in the Vault as long as they don't have osETH minted. It also allows Vault owners to develop a utility & liquidity ecosystem for ETH staked in their Vault.</li>
								<li>Meanwhile, tokenless Vaults protect users from triggering a tax event when depositing or withdrawing ETH from the Vault. A stake in the tokenless Vault cannot be transferred to another wallet.</li>
								<li>Presence of Vault Tokens is defined by the Vault creator during Vault setup and <strong>cannot be changed later</strong>.</li>
							</ul>
						</li>
						<li>
							<h3>Vault block rewards destination</h3>
							<ul class="list-disc my-4">
								<li>Smoothing Pool or Own Escrow for collecting the block rewards.</li>
								<li>Block rewards destination is defined by the Vault creator during Vault setup and <strong>cannot be changed later</strong>.</li>
							</ul>
						</li>
						<li>
							<h3>Vault branding</h3>
							<ul class="list-disc my-4">
								<li>Allows Vault Admins to set the name, description and avatar for their Vault.</li>
								<li>Vault branding <strong>can be changed at any time</strong>.</li>
							</ul>
						</li>
						<li>
							<h3>Vault verification</h3>
							<p>Vault verification provides certainty to Stakers that Vault branding is accurate, i.e. a Vault branded by Operator A is indeed controlled and run by Operator A. Verification is a manual process managed by the core StakeWise team. </p>
						</li>
					</ul>

					<h2 class="mt-1"><a href="https://docs.stakewise.io/protocol-overview-in-depth/vaults#solo-vaults" target="_blank">Operator Service</a></h2>
					<p>Operator Service is primarily responsible for the registration of validators. Operator Service periodically checks whether a Vault has accumulated enough assets for registering new validator(s) and sends a registration transaction to the Vault. The validator registration process consists of the following steps:</p>
					<ol class="list-decimal space-y-2 pl-6">
						<li>Check whether Vault has accumulated enough assets to register a validator (e.g., 32 ETH for Ethereum)</li>
						<li>Get the next free validator public key from the deposit data file attached to Operator Service. The validators are registered in the same order as specified in the deposit data file.</li>
						<li>Obtain BLS signature for exit message using local keystores or remote signer.</li>
						<li>Share the exit signature of the validator with StakeWise Oracles:
							<ul class="list-disc my-4">
								<li>Using <a href="https://en.wikipedia.org/wiki/Shamir%27s_secret_sharing" target="_blank">Shamir's secret sharing</a>, split validator's BLS signature. The number of shares is equal to the number of Oracles.</li>
								<li>Encrypt exit signatures with with Oracles' public keys.</li>
								<li>Send encrypted exit signatures to all the Oracles and receive registration signatures from them.</li>
								<li>Send transaction to Vault contract to register the validator.</li>
							</ul>
						</li>
					</ol>
					<p>Operator Service periodically checks active validators of the Vault and if some exit signatures become outdated, Operator Service will submit a signature update transaction to the Vault.</p>
				
					<h2 class="mt-1">Government and management</h2>
					<p>Every Vault is an independent staking pool and its smart contracts cannot be unilaterally changed or upgraded by the StakeWise DAO. The DAO may implement changes to the Vault contracts to improve their efficiency and safety, in which case a new version of Vault contracts would become available to users. However, Vaults can always choose not to upgrade to the new version. This helps Vault owners preserve control over the staking experience they offer.</p>
					<p>Every Vault has several key roles for the internal management of the staking process. </p>
					<ul class="list-disc my-4">
						<li>
							<h3>Vault Admin</h3>
							<ul class="list-disc my-4">
								<li>Deploys the Vaults and sets the core parameters like the type of Vault and fee. Vault Admins also control the Vault's branding.</li>
								<li>Vault Admin can be a single wallet, a multisig, or a DAO. Out of security considerations, Vault Admin cannot be changed once the Vault has been deployed.</li>
								<li>Vault Admin cannot change the core parameters of the Vault once it has been deployed. However, an Admin can assign the Access Manager and Keys Manager roles to other wallets, and change the recipient of the staking fee. </li>
							</ul>
						</li>
						<li>
							<h3>Access Manager</h3>
							<ul class="list-disc my-4">
								<li>Wallet with the power to add and remove wallets from the whitelist of a Private Vault.</li>
								<li>By default, Vault Admin is also the Access Manager. However, an Admin can assign the Access Manager role to another wallet, and reclaim this role at any moment in the future.</li>
							</ul>
						</li>
						<li>
							<h3>Keys Manager</h3>
							<ul class="list-disc my-4">
								<li>Wallet with the power to add new deposit data to a given Vault.</li>
								<li>By default, Vault Admin is also the Keys Manager. However, an Admin can assign the Keys Manager role to another wallet, and reclaim this role at any moment in the future.</li>
							</ul>
						</li>
					</ul>
					<p>Note that StakeWise always checks the validity of deposit data submitted to the Vault to ensure it contains the correct withdrawal address and hasn't been used before.</p>

					<h2 class="mt-1">Operating a vault</h2>
					<ul class="list-disc my-4">
						<li><strong>Vault operator(s)</strong> = Entities or individuals who run validators for a Vault
							<p>Vault Admins determine who the Vault operators are by uploading a deposit data file to the Vault. This file contains the public keys to the validators and the order they will be created when the Vault accumulates enough ETH. These keys are generated by the Vault operators using StakeWise Operator Service, or another keygen software.</p>
							<p>It is not possible to change an operator who is already running validators for a Vault. However, it is possible to assign new operators for the validators that will be launched in the future by uploading new deposit data.</p>
							<p>Vault Admin can assign the role of Keys Manager to another wallet to outsource the uploading of new deposit data (and hence the determination of Vault operators) to a third party.</p>
						</li>
						<li><strong>Vault state</strong>
							<p>Every Vault has an internal accounting ledger, saved in the form of a Vault state, that keeps track of the value of stakers' participation in the Vault.</p>
							<p>Any event that impacts the value of users' stake in the Vault (e.g. new ETH deposit into a Vault, ETH rewards being earned, MEV claimed from a Smoothing Pool etc.) or requires the latest value of users' stake in the Vault (e.g. minting or burning osETH) will require an update to the Vault state to ensure all values are up to date.</p>
							<p>Any user-driven interaction with the Vault will trigger an update in the Vault state. In the absence of user-driven actions, Vault operator(s) can manually trigger the update whenever they see fit (optional). </p>
						</li>
					</ul>
					<h2 class="mt-1">Whitelist</h2>
					<ul class="list-disc my-4">
						<li>Within private Vaults, it allows Vault Admin to control who can deposit and withdraw ETH from the Vault.</li>
						<li>Once a Private Vault is deployed, Vault Admin can add or remove wallets from the whitelist to manage access to the Vault. Wallets added to the whitelist can stake ETH into the Vault. If a wallet is removed from the whitelist after making a deposit, it will still be able to unstake ETH from that Vault.</li>
						<li>Vault Admin can also assign the role of Access Manager to another wallet to outsource the management of the whitelist to a third party.</li>
					</ul>

					<h2 class="mt-1">Handling of Mev</h2>
					<ul class="list-disc my-4">
						<li>
							<h3>Smoothing Pool</h3>
							<p>Smoothing Pool collects block proposal rewards from all participating validators (Vaults) and periodically distributes rewards to the participants, proportionately to their size.</p>
							<h4>MEV theft protection</h4>
							<p>Smoothing Pool system relies on fair contributions from all participants. A Vault that uses the Smoothing Pool to collect block proposal rewards must not engage in any form of MEV theft that lowers its contribution to the Pool. </p>
							<p>To encourage fair behaviour, StakeWise delays the actual pay-out of ETH rewards from the Smoothing Pool to the Vault until the moment that the Vault contributes the expected amount of rewards for proposing a block. </p>
							<p>The expected amount is defined as the lowest possible reward that the proposing validator could have received for a block it proposed using one of the StakeWise DAO-approved relays. </p>
							<p>If the contribution is on par with or exceeds expectations, the rewards accumulated for the Vault in the Smoothing Pool to date are paid out. </p>
							<p>If the contribution is below the expected amount, the rewards that the Vault expected to receive from the Smoothing Pool are withheld in favour of other Pool participants. The Vault also receives an "MEV thief" status and gets its Vault Score reduced. </p>
						</li>
						<li><h3>Own Escrow</h3>
							<p>Own Escrow allows a Vault to choose an independent approach to earning block production rewards, like using any relay of choice, because it does not rely on sharing such rewards with other Vaults.</p>
							<p>Using Own Escrow to collect block proposal rewards allows Vaults to build their own blocks or use any relay they see fit. </p>
						</li>
					</ul>
				</div>
            </section>--}}

		<section id="install" class="mt-8 max-w-6xl mx-auto px-4 mt-20">
			<h2 class="mt-4 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Integration
			</h2>
{{> clients/stakewise_cli InstallationGuide=true }}
		</section>

		<section id="operator" class="mt-8 max-w-6xl mx-auto px-4 mt-20">
			<h2 class="mt-4 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Add Stakewise operator
			</h2>
{{> clients/stakewise_operator }}
		</section>

			<section class="chapter" id="update">
		<section id="operator" class="mt-8 max-w-6xl mx-auto px-4 mt-20">
			<h2 class="mt-4 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Update
			</h2>
{{> clients/stakewise_cli InstallationGuide=false }}
			</section>

			{{!--<section class="chapter" id="exit">
				<div class="content">
					<h2>Exit</h2>
				</div>
			</section>--}}

		<section id="maintenance" class="mt-8 max-w-6xl mx-auto px-4 my-20">
			<h2 class="mt-10 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Regular maintenance
			</h2>
			<p>As a regular member securying the network and processing blockchain operations on it, you need to keep your software up to date to avoid penalties and earning rewards for the work.</p>
			<a href="/{{chainUrl}}/maintenance" class="mt-5 inline-flex items-center gap-2 rounded-full bg-black text-white px-5 py-2.5 text-sm font-medium hover:bg-gray-800 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black">
									Guides for regular maintenance
									<svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
									</svg>
								</a>
		</section>


		<section id="dashboard" class="mt-8 max-w-6xl mx-auto px-4 my-20">
			<h2 class="mt-8 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Tax matter
			</h2>
			<p>If you do not emmit a liquid token against your stake, your tokens are simply locked in the contract. Your Rewards are visible right in the StakeWise dashboard, including an option to export that in .csv (Excel) format, see below:</p>
			<img src="/img/pages/guides/stakewise/stakewise-dashboard.webp" alt="StakeWise Dashboard">
		</section>

		<section id="withdrawal" class="mt-8 max-w-6xl mx-auto px-4 my-20">
			<h2 class="mt-8 text-3xl md:text-4xl font-extrabold tracking-tight text-gray-900">
				Withdrawals
			</h2>
			<p>If any client process a withdrawal through the StakeWise page, StakeWise operator service triggers an exit a required number of validators to unlock tokens to cover the withdrawal request. The client must wait certain time till his tokens become unlocked and available for clain through the StakeWise webpage.</p>
		</section>

	</main>

	<aside class="ifr-panel xl:sticky xl:top-8 self-start xl:mt-180">
		<div class="bg-gray-100 rounded-lg p-4 text-sm shadow-sm">
			<p class="font-semibold mb-2">Interactive Config</p>
			{{> guides/variablesOverview }}
		</div>
	</aside>
</div>
{{> footer_tailwind}}
{{> scripts/tabselector}}